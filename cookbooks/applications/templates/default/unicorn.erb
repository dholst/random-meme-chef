#!/bin/bash

set -e

sig () {
  test -s "$PID" && kill -$1 `cat "$PID"`
}

oldsig () {
  test -s "$OLD_PID" && kill -$1 `cat "$OLD_PID"`
}

running() {
  [ ! -f "$PID" ] && return 1
  pid=`cat $PID`
  [ -z "$pid" ] && return 1
  [ ! -d /proc/$pid ] &&  return 1
  return 0
}

status(){
  echo -n $"Checking for $PID: "

  if (running); then
    echo "found"
  else
    echo "not found"
  fi
}

cmd () {
  case $1 in
    start)
      sig 0 && echo >&2 "Already running" && exit 0
      echo "Starting"
      $CMD
      ;;
    stop)
      sig QUIT && echo "Stopping" && exit 0
      echo >&2 "Not running"
      ;;
    force-stop)
      sig TERM && echo "Forcing a stop" && exit 0
      echo >&2 "Not running"
      ;;
    restart|reload)
      sig USR2 && sleep 5 && oldsig QUIT && echo "Killing old master" `cat $OLD_PID` && exit 0
      echo >&2 "Couldn't reload, starting '$CMD' instead"
      $CMD
      ;;
    upgrade)
      sig USR2 && echo Upgraded && exit 0
      echo >&2 "Couldn't upgrade, starting '$CMD' instead"
      $CMD
      ;;
    rotate)
      sig USR1 && echo rotated logs OK && exit 0
      echo >&2 "Couldn't rotate logs" && exit 1
      ;;
    status)
      status
      ;;
    *)
      echo >&2 "Usage: $0 <start|stop|status|restart|upgrade|rotate|force-stop>"
      exit 1
      ;;
    esac
}

RAILS_ENV=<%= @environment %>
RAILS_ROOT=/var/www/<%= @name %>/current
PID=$RAILS_ROOT/tmp/pids/unicorn.pid
OLD_PID="$PID.oldbin"

export DATABASE_NAME=<%= @database_name %>
export DATABASE_USERNAME=<%= @database_username %>
export DATABASE_PASSWORD=<%= @database_password %>

cd $RAILS_ROOT || exit 1

PATH=$PATH:/usr/local/bin
CMD="bundle exec unicorn_rails -c $RAILS_ROOT/config/unicorn.rb -E $RAILS_ENV -D"

cmd $1

